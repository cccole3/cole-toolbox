{"version":3,"sources":["logo.svg","Navigation/Brand.tsx","Pages/Home/Header/Header.tsx","Pages/Home/Projects/Table.tsx","Pages/Home/Home.tsx","Pages/Typescript/TwoSum/Problem.tsx","Pages/Typescript/TwoSum/Code.tsx","Pages/Typescript/TwoSum/Input.tsx","Pages/Typescript/TwoSum/two_sum.ts","Pages/Typescript/TwoSum/TwoSum.tsx","Pages/Typescript/Tabs.tsx","Pages/Typescript/Header.tsx","Pages/Typescript/Typescript.tsx","Pages/Javascript/Javascript.tsx","Navigation/Navigation.tsx","App.tsx","Theme/Theme.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Brand","to","Navbar","alt","src","logo","width","height","className","Header","Jumbotron","Button","variant","href","target","React","Component","ProgressTable","Table","striped","bordered","hover","ProgressBar","now","key","animated","Home","Container","fluid","TwoSumProblem","Accordion","defaultActiveKey","Card","Toggle","as","eventKey","Collapse","Body","TwoSumCode","id","file","TwoSumInput","props","state","numbers","targetSum","handleChange","bind","handleSubmit","event","value","name","newState","this","setState","console","log","split","map","Number","answer","nums","numObject","i","length","diff","hasOwnProperty","twoSum","alert","join","preventDefault","Form","onSubmit","Group","Control","rows","onChange","type","TwoSum","Row","Col","TypescriptTabs","Tabs","Tab","title","disabled","Typescript","Javascript","NavigationBar","bg","collapseOnSelect","expand","sticky","aria-controls","Nav","Link","NavigationSwitch","path","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.15ea5d16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.967ef51e.svg\";","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport logo from '../logo.svg'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport function Brand() {\r\n  return (\r\n    <LinkContainer to=\"/\">\r\n      <Navbar.Brand>\r\n        <img\r\n          alt=\"\"\r\n          src={logo}\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top\"\r\n        />{' '}\r\n        Chris Cole\r\n      </Navbar.Brand>\r\n    </LinkContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaLaptopCode } from 'react-icons/fa'\r\n\r\nexport class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron>\r\n        <h1>\r\n          Hello, World! <FaLaptopCode />\r\n        </h1>\r\n        <div>\r\n          <p>\r\n            This project is setup for me to learn all aspects of development and\r\n            continually aquire skills.\r\n          </p>\r\n          <p>\r\n            Problems are sourced from{' '}\r\n            <Button\r\n              variant=\"primary\"\r\n              href=\"https://leetcode.com/\"\r\n              target=\"_blank\"\r\n            >\r\n              Leetcode\r\n            </Button>{' '}\r\n            and{' '}\r\n            <Button\r\n              variant=\"secondary\"\r\n              href=\"https://hackerrank.com/\"\r\n              target=\"_blank\"\r\n            >\r\n              HackerRank\r\n            </Button>\r\n          </p>\r\n        </div>\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nexport class ProgressTable extends React.Component {\r\n  render() {\r\n    return (\r\n      <Table striped={true} bordered={true} hover={true}>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Progress</th>\r\n            <th>Project</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>\r\n              <ProgressBar>\r\n                <ProgressBar variant=\"success\" now={100} key={1} />\r\n                <ProgressBar\r\n                  animated={true}\r\n                  variant=\"warning\"\r\n                  now={0}\r\n                  key={2}\r\n                />\r\n                <ProgressBar variant=\"info\" now={0} key={3} />\r\n              </ProgressBar>\r\n            </td>\r\n            <td>Build React Web App</td>\r\n          </tr>\r\n          <tr>\r\n            <td>2</td>\r\n            <td>\r\n              <ProgressBar>\r\n                <ProgressBar variant=\"success\" now={100} key={1} />\r\n                <ProgressBar\r\n                  animated={true}\r\n                  variant=\"warning\"\r\n                  now={0}\r\n                  key={2}\r\n                />\r\n                <ProgressBar variant=\"info\" now={0} key={3} />\r\n              </ProgressBar>\r\n            </td>\r\n            <td>Problem/Typescript Setup</td>\r\n          </tr>\r\n          <tr>\r\n            <td>3</td>\r\n            <td>\r\n              <ProgressBar>\r\n                <ProgressBar variant=\"success\" now={100} key={1} />\r\n                <ProgressBar\r\n                  animated={true}\r\n                  variant=\"warning\"\r\n                  now={0}\r\n                  key={2}\r\n                />\r\n                <ProgressBar variant=\"info\" now={0} key={3} />\r\n              </ProgressBar>\r\n            </td>\r\n            <td>\r\n              <a href=\"https://leetcode.com/problems/two-sum\" target=\"blank\">\r\n                Two Sum Problem\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Header } from './Header/Header'\r\nimport { ProgressTable } from './Projects/Table'\r\n\r\nexport class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Header />\r\n        <ProgressTable />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport class TwoSumProblem extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>1. Two Sum</h1>\r\n        <div>\r\n          <p>\r\n            Given an array of integers, return <strong>indices</strong> of the\r\n            two numbers such that they add up to a specific target.\r\n          </p>\r\n\r\n          <p>\r\n            You may assume that each input would have{' '}\r\n            <strong>\r\n              <em>exactly</em>\r\n            </strong>{' '}\r\n            one solution, and you may not use the <em>same</em> element twice.\r\n          </p>\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"0\">\r\n                  Example:\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  Given nums = [2, 7, 11, 15], target = 9, Because nums[\r\n                  <strong>0</strong>] + nums[<strong>1</strong>] = 2 + 7 = 9,\r\n                  return [<strong>0</strong>, <strong>1</strong>].\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Gist from 'react-gist'\r\nimport './Gist.css'\r\n\r\nexport class TwoSumCode extends React.Component {\r\n  render() {\r\n    return (\r\n      <Accordion>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"0\">\r\n              My Solution:\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              <Gist id=\"69dddc9df0457aedb7ce668b2deacd30\" file=\"two_sum.ts\" />\r\n              <Gist id=\"69dddc9df0457aedb7ce668b2deacd30\" file=\"two_sum.ts\" />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { twoSum } from './two_sum'\r\n\r\nexport interface Props {}\r\nexport interface State {\r\n  numbers: string\r\n  targetSum: number\r\n}\r\n\r\nexport class TwoSumInput extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n    this.state = { numbers: '1,2,4,6,8,10', targetSum: 14 }\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleChange(event: { target: { name: string; value: string | number } }) {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n    const newState = { [name]: value } as Pick<State, keyof State>\r\n\r\n    this.setState(newState)\r\n    console.log('Value Changed')\r\n  }\r\n\r\n  handleSubmit(event: { preventDefault: () => void }) {\r\n    console.log('Numbers were submitted: ' + this.state.numbers)\r\n    console.log('Target Sum was submitted: ' + this.state.targetSum)\r\n    const numbers = this.state.numbers.split(',').map(Number)\r\n    const answer = twoSum(numbers, this.state.targetSum)\r\n    console.log(\r\n      'Target Numbers: ' + numbers[answer[0]] + ' + ' + numbers[answer[1]]\r\n    )\r\n    alert('The Indeces are: [' + answer?.join(',') + ']')\r\n    event.preventDefault()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              name=\"numbers\"\r\n              as=\"textarea\"\r\n              rows={2}\r\n              value={this.state.numbers}\r\n              onChange={this.handleChange}\r\n            />\r\n            <br />\r\n            <Form.Control\r\n              name=\"targetSum\"\r\n              type=\"number\"\r\n              value={this.state.targetSum}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","export interface HashTable<T> {\r\n  [key: number]: T\r\n}\r\n\r\nexport function twoSum(nums: number[], target: number): number[] {\r\n  const numObject: HashTable<number> = {}\r\n  for (let i = 0; i < nums.length; i++) {\r\n    const thisNum = nums[i]\r\n    numObject[thisNum] = i\r\n  }\r\n  for (let i = 0; i < nums.length; i++) {\r\n    const diff = target - nums[i]\r\n    if (numObject.hasOwnProperty(diff) && numObject[diff] !== i) {\r\n      return [i, numObject[diff]]\r\n    }\r\n  }\r\n  return [0, 0]\r\n}\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { TwoSumProblem } from './Problem'\r\nimport { TwoSumCode } from './Code'\r\nimport { TwoSumInput } from './Input'\r\n\r\nexport class TwoSum extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row>\r\n          <Col>\r\n            <TwoSumProblem />\r\n          </Col>\r\n          <Col>\r\n            <TwoSumCode />\r\n            <br></br>\r\n            <TwoSumInput />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { TwoSum } from './TwoSum/TwoSum'\r\n\r\nexport class TypescriptTabs extends React.Component {\r\n  render() {\r\n    return (\r\n      <Tabs defaultActiveKey=\"TwoSum\">\r\n        <Tab eventKey=\"TwoSum\" title=\"Two Sum\">\r\n          <TwoSum />\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\"></Tab>\r\n        <Tab eventKey=\"contact\" title=\"Contact\" disabled={true}></Tab>\r\n      </Tabs>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport { FaKeyboard } from 'react-icons/fa'\r\n\r\nexport class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Jumbotron>\r\n        <h1>\r\n          Hello, Typescript! <FaKeyboard />\r\n        </h1>\r\n        <p>\r\n          Here is where completed Typescript challenges will be. We will be able\r\n          to run inputs and view the outputs as well as the source of the code.\r\n        </p>\r\n      </Jumbotron>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { TypescriptTabs } from './Tabs'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Header } from './Header'\r\n\r\nexport class Typescript extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Header />\r\n        <TypescriptTabs />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport function Javascript() {\r\n  return <h1>Project2</h1>\r\n}\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport './Navigation.css'\r\nimport { Brand } from './Brand'\r\n// import { Search } from './Search'\r\nimport { ThemeType } from '../Theme/Theme'\r\nimport { Home } from '../Pages/Home/Home'\r\nimport { Typescript } from '../Pages/Typescript/Typescript'\r\nimport { Javascript } from '../Pages/Javascript/Javascript'\r\n\r\nexport interface Props {\r\n  bg: ThemeType\r\n  variant: ThemeType\r\n}\r\n\r\nexport class NavigationBar extends React.Component<Props, object> {\r\n  render() {\r\n    const { bg, variant } = this.props\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect={true}\r\n        expand=\"md\"\r\n        bg={bg}\r\n        variant={variant}\r\n        sticky=\"top\"\r\n      >\r\n        <Brand />\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/\">\r\n              <Nav.Link>Home</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/typescript\">\r\n              <Nav.Link>Typescript</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/javascript\">\r\n              <Nav.Link>Javascript</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n          {/* <Search variant={variant} /> */}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport class NavigationSwitch extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/typescript\">\r\n          <Typescript />\r\n        </Route>\r\n        <Route path=\"/javascript\">\r\n          <Javascript />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { NavigationBar, NavigationSwitch } from './Navigation/Navigation'\r\nimport { theme } from './Theme/Theme'\r\nimport './Theme/Theme.css'\r\n\r\n// import ButtonsShowcase from './showcases/Buttons'\r\n// import ToastsShowcase from './showcases/Toasts'\r\n\r\nexport function App() {\r\n  return (\r\n    <Router basename=\"/cole-toolbox\">\r\n      <NavigationBar bg={theme} variant={theme} />\r\n      <div className=\"main-page\">\r\n        <NavigationSwitch />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","export type ThemeType = 'light' | 'dark' | undefined\r\nexport const theme = 'dark'\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { App } from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}